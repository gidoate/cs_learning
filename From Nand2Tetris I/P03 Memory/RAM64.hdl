// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //Separate the load into all the possible loads
    //Concept:
    //With bits 3..5 divides in sets of 8 bits (loads a to h)
    //With bits 0..2 fills each of the RAMs a to h
    //Out will be the Mux8way of all the rams with selection address[3..5]
    
    DMux8Way(in=load, sel=address[3..5], a=loada, b=loadb, c=loadc, d=loadd, e=loade, f=loadf, g=loadg, h=loadh);
    RAM8(in=in , load=loada , address=address[0..2] , out=RAM8a );
    RAM8(in=in , load=loadb , address=address[0..2] , out=RAM8b );
    RAM8(in=in , load=loadc , address=address[0..2] , out=RAM8c );
    RAM8(in=in , load=loadd , address=address[0..2] , out=RAM8d );
    RAM8(in=in , load=loade , address=address[0..2] , out=RAM8e );
    RAM8(in=in , load=loadf , address=address[0..2] , out=RAM8f );
    RAM8(in=in , load=loadg , address=address[0..2] , out=RAM8g );
    RAM8(in=in , load=loadh , address=address[0..2] , out=RAM8h );

    Mux8Way16(a=RAM8a , b=RAM8b , c=RAM8c , d=RAM8d , e=RAM8e , f=RAM8f , g=RAM8g , h=RAM8h , sel=address[3..5] , out=out );

    //// Replace this comment with your code.
}