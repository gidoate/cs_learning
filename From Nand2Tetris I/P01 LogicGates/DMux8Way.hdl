// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    //Negation of three sel options
    Not(in=sel[0] , out=notsel0 );
    Not(in=sel[1] , out=notsel1 );
    Not(in=sel[2] , out=notsel2 );
    //Calculation of a
    And(a=in , b=notsel0 , out=atemp1 );
    And(a=atemp1 , b=notsel1 , out=atemp2 );
    And(a=atemp2 , b=notsel2 , out=a );
    //Calculation of b
    And(a=in , b=sel[0] , out=btemp1 );
    And(a=btemp1 , b=notsel1 , out=btemp2 );
    And(a=btemp2 , b=notsel2 , out=b );
    //Calculation of c
    And(a=in , b=notsel0 , out=ctemp1 );
    And(a=ctemp1 , b=sel[1] , out=ctemp2 );
    And(a=ctemp2 , b=notsel2 , out=c );
    //Calculation of d
    And(a=in , b=sel[0] , out=dtemp1 );
    And(a=dtemp1 , b=sel[1] , out=dtemp2 );
    And(a=dtemp2 , b=notsel2 , out=d );
    //Calculation of e
    And(a=in , b=notsel0 , out=etemp1 );
    And(a=etemp1 , b=notsel1 , out=etemp2 );
    And(a=etemp2 , b=sel[2] , out=e );
    //Calculation of f
    And(a=in , b=sel[0] , out=ftemp1 );
    And(a=ftemp1 , b=notsel1 , out=ftemp2 );
    And(a=ftemp2 , b=sel[2] , out=f );
    //Calculation of g
    And(a=in , b=notsel0 , out=gtemp1 );
    And(a=gtemp1 , b=sel[1] , out=gtemp2 );
    And(a=gtemp2 , b=sel[2] , out=g );
    //Calculation of h / Requires check if all selector bits are 1
    And(a=sel[0] , b=sel[1] , out=seltemp1 );
    And(a=seltemp1 , b=sel[2] , out=allsel1 );
    And(a=in , b=allsel1 , out=h );



    //// Replace this comment with your code.
}